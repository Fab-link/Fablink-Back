apiVersion: apps/v1
kind: Deployment
metadata:
  name: fablink-backend
  namespace: fablink-prod
  labels:
    app: fablink-backend
    environment: prod
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0  # Zero-downtime deployment
  selector:
    matchLabels:
      app: fablink-backend
      environment: prod
  template:
    metadata:
      labels:
        app: fablink-backend
        environment: prod
    spec:
      serviceAccountName: fablink-backend-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: fablink-backend
          image: 853963783084.dkr.ecr.ap-northeast-2.amazonaws.com/fablink-backend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          envFrom:
            - configMapRef:
                name: fablink-config
            - secretRef:
                name: fablink-secrets
          env:
            # 추가 환경변수 (필요시)
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          # 헬스체크 설정
          livenessProbe:
            httpGet:
              path: /health/
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /ready/
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          startupProbe:
            httpGet:
              path: /health/
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
            successThreshold: 1
          # 보안 설정
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false  # Django가 임시 파일 생성 필요
            capabilities:
              drop:
                - ALL
          # 볼륨 마운트 (필요시)
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: app-tmp
              mountPath: /app/tmp
      volumes:
        - name: tmp
          emptyDir: {}
        - name: app-tmp
          emptyDir: {}
      # 노드 선택 및 배치 설정
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
      # Pod 분산 배치 (고가용성)
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - fablink-backend
                topologyKey: kubernetes.io/hostname
